apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'idea'

mainClassName = "com.hazelcast.core.server.StartServer"
applicationDefaultJvmArgs = ["-Xms$HZ_MIN_HEAP_SIZE", "-Xmx$HZ_MAX_HEAP_SIZE"]

def env = System.getenv();

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

sourceSets{
    main{
        resources{
            srcDir 'src/main/resources'
            srcDir 'src/main/javascript'
        }
    }
}

repositories {
    jcenter()
}

dependencies {
    compile "com.hazelcast:hazelcast:$HZ_VERSION"
    compile "com.hazelcast:hazelcast-client:$HZ_VERSION"
    // compile "javax.cache:cache-api:1.0.0"

    //Nashorn
    compile files("${env.JAVA_HOME}/jre/lib/ext/nashorn.jar")
}

task collectJars(type: Copy) {
    into "$buildDir/classpath/lib"
    from configurations.testRuntime
}

task makeDirs(description: 'make all dirs for project setup') << {
    def sources = [sourceSets.main, sourceSets.test]
    sources*.allSource*.srcDirs.flatten().each { File srcDir ->
        println "making $srcDir"
        srcDir.mkdirs()
    }
}

idea {
    project {
        jdkName = '1.8'
        languageLevel = '1.8'
    }

    module {
        downloadSources = true
        downloadJavadoc = true
    }
}

task startServer(type: JavaExec) {
    main = 'scripting.ScriptRunner'
    classpath = sourceSets.main.runtimeClasspath
    args 'hazelcastMember.js'
}

task startClient(type: JavaExec) {
    main = 'scripting.ScriptRunner'
    classpath = sourceSets.main.runtimeClasspath +  files("${projectDir}/src/main/javascript")
    args 'hazelcastClient.js'
}
